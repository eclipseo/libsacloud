// Copyright 2016-2019 The Libsacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by "stringer -type=WindowsPublicArchiveType"; DO NOT EDIT.

package ostype

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Windows2016-0]
	_ = x[Windows2016RDS-1]
	_ = x[Windows2016RDSOffice-2]
	_ = x[Windows2016SQLServerWeb-3]
	_ = x[Windows2016SQLServerStandard-4]
	_ = x[Windows2016SQLServer2017Standard-5]
	_ = x[Windows2016SQLServerStandardAll-6]
	_ = x[Windows2016SQLServer2017StandardAll-7]
	_ = x[Windows2019-8]
}

const _WindowsPublicArchiveType_name = "Windows2016Windows2016RDSWindows2016RDSOfficeWindows2016SQLServerWebWindows2016SQLServerStandardWindows2016SQLServer2017StandardWindows2016SQLServerStandardAllWindows2016SQLServer2017StandardAllWindows2019"

var _WindowsPublicArchiveType_index = [...]uint8{0, 11, 25, 45, 68, 96, 128, 159, 194, 205}

func (i WindowsPublicArchiveType) String() string {
	if i < 0 || i >= WindowsPublicArchiveType(len(_WindowsPublicArchiveType_index)-1) {
		return "WindowsPublicArchiveType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _WindowsPublicArchiveType_name[_WindowsPublicArchiveType_index[i]:_WindowsPublicArchiveType_index[i+1]]
}

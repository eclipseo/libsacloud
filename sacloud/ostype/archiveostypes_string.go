// Copyright 2016-2019 The Libsacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by "stringer -type=ArchiveOSTypes"; DO NOT EDIT.

package ostype

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CentOS-0]
	_ = x[CentOS6-1]
	_ = x[Ubuntu-2]
	_ = x[Debian-3]
	_ = x[CoreOS-4]
	_ = x[RancherOS-5]
	_ = x[K3OS-6]
	_ = x[Kusanagi-7]
	_ = x[SophosUTM-8]
	_ = x[FreeBSD-9]
	_ = x[Netwiser-10]
	_ = x[OPNsense-11]
	_ = x[Windows2016-12]
	_ = x[Windows2016RDS-13]
	_ = x[Windows2016RDSOffice-14]
	_ = x[Windows2016SQLServerWeb-15]
	_ = x[Windows2016SQLServerStandard-16]
	_ = x[Windows2016SQLServer2017Standard-17]
	_ = x[Windows2016SQLServerStandardAll-18]
	_ = x[Windows2016SQLServer2017StandardAll-19]
	_ = x[Windows2019-20]
	_ = x[Custom-21]
}

const _ArchiveOSTypes_name = "CentOSCentOS6UbuntuDebianCoreOSRancherOSK3OSKusanagiSophosUTMFreeBSDNetwiserOPNsenseWindows2016Windows2016RDSWindows2016RDSOfficeWindows2016SQLServerWebWindows2016SQLServerStandardWindows2016SQLServer2017StandardWindows2016SQLServerStandardAllWindows2016SQLServer2017StandardAllWindows2019Custom"

var _ArchiveOSTypes_index = [...]uint16{0, 6, 13, 19, 25, 31, 40, 44, 52, 61, 68, 76, 84, 95, 109, 129, 152, 180, 212, 243, 278, 289, 295}

func (i ArchiveOSTypes) String() string {
	if i < 0 || i >= ArchiveOSTypes(len(_ArchiveOSTypes_index)-1) {
		return "ArchiveOSTypes(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ArchiveOSTypes_name[_ArchiveOSTypes_index[i]:_ArchiveOSTypes_index[i+1]]
}
